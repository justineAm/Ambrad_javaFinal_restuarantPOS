
import java.sql.Connection;
import java.sql.SQLException;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 2ndyrGroupC
 */
public class order extends javax.swing.JInternalFrame {

    boolean cBtn;
    boolean rBtn;

    /**
     * Creates new form order
     */
    public order() throws ClassNotFoundException, SQLException {
        initComponents();
        displayOrders();
         displaySales();
          menuName1.requestFocus();
    }

    public void displayOrders() throws ClassNotFoundException, SQLException {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM orders");
            ResultSet rs = stmt.executeQuery();

            ResultSetMetaData stData = rs.getMetaData();

            int q = stData.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel) orders.getModel();
            RecordTable.setRowCount(0);

            while (rs.next()) {
                Vector columnData = new Vector();
                int i;

                for (i = 1; i <= q; i++) {
                    columnData.add(rs.getString("menu_name"));
                    columnData.add(rs.getString("quantity"));
                    columnData.add(rs.getString("price"));
                    columnData.add(rs.getString("tableNo"));
                    columnData.add(rs.getString("status"));
                    columnData.add(rs.getString("id"));

                }
                RecordTable.addRow(columnData);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    
    public void displaySales() throws ClassNotFoundException, SQLException {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM sales");
            ResultSet rs = stmt.executeQuery();

            ResultSetMetaData stData = rs.getMetaData();

            int q = stData.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel) salesTable.getModel();
            RecordTable.setRowCount(0);

            while (rs.next()) {
                Vector columnData = new Vector();
                int i;

                for (i = 1; i <= q; i++) {
                    columnData.add(rs.getString("sales_id"));
                    columnData.add(rs.getString("table_number"));
                    columnData.add(rs.getString("total"));
                    columnData.add(rs.getString("createdf_at"));
                    

                }
                RecordTable.addRow(columnData);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orders = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tableNo = new javax.swing.JTextField();
        confirmBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        quantity = new javax.swing.JTextField();
        myStatus = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        orderId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        menuName1 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        price1 = new javax.swing.JTextField();
        deleteBtn = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        rejectBtn = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPasswordField1.setText("jPasswordField1");

        setBackground(new java.awt.Color(0, 0, 51));
        setPreferredSize(new java.awt.Dimension(900, 710));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));
        jPanel2.setPreferredSize(new java.awt.Dimension(900, 700));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orders.setBackground(new java.awt.Color(153, 153, 153));
        orders.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        orders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Menu name", "Quantity", "Price", "Table No.", "Status", "ID"
            }
        ));
        orders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orders);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 270, 690, 160));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("ORDER DETAILS");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        tableNo.setBackground(new java.awt.Color(255, 153, 0));
        tableNo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(tableNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, 110, 50));

        confirmBtn.setBackground(new java.awt.Color(0, 51, 153));
        confirmBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        confirmBtn.setText("Confirm");
        confirmBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmBtnMouseClicked(evt);
            }
        });
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });
        jPanel2.add(confirmBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 210, 90, 40));

        addBtn.setBackground(new java.awt.Color(0, 0, 255));
        addBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel2.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 210, 90, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("Table number");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, -1, 34));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("ID");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 100, -1, 34));

        quantity.setBackground(new java.awt.Color(255, 153, 0));
        quantity.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityActionPerformed(evt);
            }
        });
        jPanel2.add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 130, 110, 50));

        myStatus.setBackground(new java.awt.Color(255, 153, 0));
        myStatus.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(myStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 110, 50));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Status");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, -1, 34));

        orderId.setBackground(new java.awt.Color(255, 153, 0));
        orderId.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel2.add(orderId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 110, 50));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Quantity");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 100, -1, 34));

        menuName1.setBackground(new java.awt.Color(255, 153, 0));
        menuName1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        menuName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuName1ActionPerformed(evt);
            }
        });
        jPanel2.add(menuName1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 210, 110, 50));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 204, 204));
        jLabel8.setText("Menu name");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, 34));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 204, 204));
        jLabel9.setText("Price");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, -1, 34));

        price1.setBackground(new java.awt.Color(255, 153, 0));
        price1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        price1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                price1ActionPerformed(evt);
            }
        });
        jPanel2.add(price1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, 110, 50));

        deleteBtn.setBackground(new java.awt.Color(255, 0, 0));
        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        deleteBtn.setText("Delete");
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });
        jPanel2.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 130, 90, 40));

        salesTable.setBackground(new java.awt.Color(153, 153, 153));
        salesTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        salesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sales ID", "Table number", "Total", "Date"
            }
        ));
        jScrollPane3.setViewportView(salesTable);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 510, 690, 120));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 204, 204));
        jLabel6.setText("Sales Table");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, 300, 40));

        rejectBtn.setBackground(new java.awt.Color(255, 102, 0));
        rejectBtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        rejectBtn.setText("Reject");
        rejectBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rejectBtnMouseClicked(evt);
            }
        });
        rejectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBtnActionPerformed(evt);
            }
        });
        jPanel2.add(rejectBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 130, 90, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 810, 670));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersMouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) orders.getModel();
        int index = orders.getSelectedRow();
        ///set data into text fields when row is selected
        String menu = model.getValueAt(orders.getSelectedRow(), 0).toString();
        String pquantity = model.getValueAt(orders.getSelectedRow(), 1).toString();
        String price = model.getValueAt(orders.getSelectedRow(), 2).toString();
        String tableNum = model.getValueAt(orders.getSelectedRow(), 3).toString();
        String status = model.getValueAt(orders.getSelectedRow(), 4).toString();
        String id = model.getValueAt(orders.getSelectedRow(), 5).toString();

        if (null != status) {
            switch (status) {
                case "rejected":
                    confirmBtn.setEnabled(false);
                    rejectBtn.setEnabled(false);
                    cBtn = false;
                    rBtn = false;
                    break;
                case "confirmed":
                    confirmBtn.setEnabled(false);
                    rejectBtn.setEnabled(false);
                    cBtn = false;
                    rBtn = false;
                    break;
                case "pending":
                    confirmBtn.setEnabled(true);
                    rejectBtn.setEnabled(true);
                    cBtn = true;
                    rBtn = true;
                    break;
                default:
                    break;
            }
        }
        menuName1.setText(menu);
        quantity.setText(pquantity);
        price1.setText(price);
        tableNo.setText(tableNum);
        myStatus.setText(status);
        orderId.setText(id);


    }//GEN-LAST:event_ordersMouseClicked

    private void quantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBtnActionPerformed

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmBtnActionPerformed
  
    private void confirmBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmBtnMouseClicked
        // TODO add your handling code here:
        
        
        if (cBtn == false) {
            JOptionPane.showMessageDialog(this, "Cannot confirmed orders!");
        } else {
            try {

                String myID = orderId.getText();
                int orderID = Integer.valueOf(myID);
                String status = myStatus.getText();
                Class.forName("com.mysql.jdbc.Driver");
                java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");

                String sql = "Update orders set status = 'confirmed' WHERE id = ?";
                PreparedStatement stmt = con.prepareStatement(sql);
                
                stmt.setInt(1, orderID);
                int result = stmt.executeUpdate();
                menuName1.setText("");
                orderId.setText("");
                price1.setText("");
                quantity.setText("");
                tableNo.setText("");
                myStatus.setText("");
                menuName1.requestFocus();
                displayOrders();

                JOptionPane.showMessageDialog(this, "Order has been Confirm successfully!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }


    }//GEN-LAST:event_confirmBtnMouseClicked

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
        if (menuName1.getText().trim().isEmpty() && quantity.getText().trim().isEmpty() && tableNo.getText().trim().isEmpty() && price1.getText().trim().isEmpty()) {
             JOptionPane.showMessageDialog(this, "All fields are required!");
        } else if (menuName1.getText().trim().isEmpty()) {
           JOptionPane.showMessageDialog(this, "All fields are required!");
        } else if (quantity.getText().trim().isEmpty()) {
           JOptionPane.showMessageDialog(this, "All fields are required!");
        } else if (tableNo.getText().trim().isEmpty()) {
           JOptionPane.showMessageDialog(this, "All fields are required!");
        }  else if (price1.getText().trim().isEmpty()) {
           JOptionPane.showMessageDialog(this, "All fields are required!");
        }else {
            try {

                String product = menuName1.getText();
                String myquantity = quantity.getText();
                String tablenum = tableNo.getText();
                 String myPrice = price1.getText();

                Class.forName("com.mysql.jdbc.Driver");
                java.sql.Connection con1 = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");

                PreparedStatement stmt = con1.prepareStatement("Insert into orders(menu_name,quantity,price,tableNo,status) values(?,?,?,?,?)");
                stmt.setString(1, product);
                stmt.setString(2, myquantity);
                stmt.setString(3, tablenum); 
                stmt.setString(4, myPrice); 
                stmt.setString(5, "pending"); 
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Order added successfully!");
                menuName1.setText("");
                orderId.setText("");
                price1.setText("");
                quantity.setText("");
                tableNo.setText("");
                myStatus.setText("");
                menuName1.requestFocus();
                displayOrders();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(menu1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }//GEN-LAST:event_addBtnMouseClicked

    private void menuName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuName1ActionPerformed

    private void price1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_price1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_price1ActionPerformed

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked

        String myId = orderId.getText();
        int Id = Integer.valueOf(myId);

        if (orderId.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Cannot delete orders!");
        } else if(myStatus.getText()!="pending"){
            try {
                confirmBtn.setEnabled(false);

                String myID = orderId.getText();
                int orderID = Integer.valueOf(myID);
                String status = myStatus.getText();
                Class.forName("com.mysql.jdbc.Driver");
                java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");

                String sql = "Delete From orders  WHERE id = ?";
                PreparedStatement stmt = con.prepareStatement(sql);

                stmt.setInt(1, orderID);
                int result = stmt.executeUpdate();
                menuName1.setText("");
                orderId.setText("");
                price1.setText("");
                quantity.setText("");
                tableNo.setText("");
                myStatus.setText("");
                menuName1.requestFocus();
                displayOrders();
                JOptionPane.showMessageDialog(this, "Order has been deleted successfully!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Cannot delete order!");
        }


    }//GEN-LAST:event_deleteBtnMouseClicked

    private void rejectBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rejectBtnMouseClicked
        // TODO add your handling code here:
        
        if (rBtn == false) {
            JOptionPane.showMessageDialog(this, "Cannot reject orders!");
        } else {
            try {
                confirmBtn.setEnabled(false);

                String myID = orderId.getText();
                int orderID = Integer.valueOf(myID);
                String status = myStatus.getText();
                Class.forName("com.mysql.jdbc.Driver");
                java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");

                String sql = "Update orders set status = 'rejected' WHERE id = ?";
                PreparedStatement stmt = con.prepareStatement(sql);

                stmt.setInt(1, orderID);
                int result = stmt.executeUpdate();
                menuName1.setText("");
                orderId.setText("");
                price1.setText("");
                quantity.setText("");
                tableNo.setText("");
                myStatus.setText("");
                menuName1.requestFocus();
                displayOrders();

                JOptionPane.showMessageDialog(this, "Order has been rejected successfully!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_rejectBtnMouseClicked

    private void rejectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rejectBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField menuName1;
    private javax.swing.JTextField myStatus;
    private javax.swing.JTextField orderId;
    private javax.swing.JTable orders;
    private javax.swing.JTextField price1;
    private javax.swing.JTextField quantity;
    private javax.swing.JButton rejectBtn;
    private javax.swing.JTable salesTable;
    private javax.swing.JTextField tableNo;
    // End of variables declaration//GEN-END:variables
}
