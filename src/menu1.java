
import java.sql.*;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 2ndyrGroupA
 */
public class menu1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form menu1
     */
    public menu1() throws ClassNotFoundException, SQLException {
        initComponents();

        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI ui = (BasicInternalFrameUI) this.getUI();
        ui.setNorthPane(null);
        displayMenu();
    }
    Connection con;

    public void displayMenu() throws ClassNotFoundException, SQLException {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");
            PreparedStatement stmt = con.prepareStatement("SELECT * FROM menu_table");
            ResultSet rs = stmt.executeQuery();
            Class.forName("com.mysql.jdbc.Driver");

            ResultSetMetaData stData = rs.getMetaData();

            int q = stData.getColumnCount();

            DefaultTableModel RecordTable = (DefaultTableModel) menu.getModel();
            RecordTable.setRowCount(0);

            while (rs.next()) {
                Vector columnData = new Vector();
                int i;

                for (i = 1; i <= q; i++) {
                    columnData.add(rs.getString("id"));
                    columnData.add(rs.getString("product_name"));
                    columnData.add(rs.getString("price"));
                    columnData.add(rs.getString("category"));

                }
                RecordTable.addRow(columnData);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        product_name = new javax.swing.JTextField();
        myPrice = new javax.swing.JTextField();
        product_category = new javax.swing.JTextField();
        msg_menu = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        msg_price = new javax.swing.JLabel();
        msg_category = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        product_id = new javax.swing.JTextField();
        msg_id = new javax.swing.JLabel();
        msge_id = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        menu = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(900, 710));
        getContentPane().setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));
        jPanel2.setPreferredSize(new java.awt.Dimension(900, 700));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("Category");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 109, 33));

        jLabel2.setBackground(new java.awt.Color(204, 204, 204));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Menu Name");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, -1, 34));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Price");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 109, 32));

        product_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_nameActionPerformed(evt);
            }
        });
        jPanel3.add(product_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 120, 138, 45));

        myPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myPriceActionPerformed(evt);
            }
        });
        jPanel3.add(myPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220, 138, 42));

        product_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_categoryActionPerformed(evt);
            }
        });
        jPanel3.add(product_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 138, 43));

        msg_menu.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        msg_menu.setForeground(new java.awt.Color(204, 0, 0));
        jPanel3.add(msg_menu, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 112, 24));
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(152, 221, -1, -1));

        msg_price.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        msg_price.setForeground(new java.awt.Color(204, 0, 0));
        jPanel3.add(msg_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 260, 112, 24));

        msg_category.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        msg_category.setForeground(new java.awt.Color(204, 0, 0));
        jPanel3.add(msg_category, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 112, 24));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setText("Id");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 42, 99, 38));

        product_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                product_idActionPerformed(evt);
            }
        });
        jPanel3.add(product_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 30, 138, 42));
        jPanel3.add(msg_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, 104, 27));
        jPanel3.add(msge_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 110, 30));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 290, 400));

        editBtn.setBackground(new java.awt.Color(0, 51, 153));
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setText("EDIT");
        editBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editBtnMouseClicked(evt);
            }
        });
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel2.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 540, -1, 59));

        deleteBtn.setBackground(new java.awt.Color(204, 0, 0));
        deleteBtn.setText("DELETE");
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteBtnMouseClicked(evt);
            }
        });
        jPanel2.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 540, -1, 59));

        addBtn.setBackground(new java.awt.Color(51, 153, 0));
        addBtn.setText("ADD");
        addBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addBtnMouseClicked(evt);
            }
        });
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });
        jPanel2.add(addBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, -1, 59));

        menu.setBackground(new java.awt.Color(153, 153, 153));
        menu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        menu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Menu Name", "Price", "Category"
            }
        ));
        menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(menu);
        if (menu.getColumnModel().getColumnCount() > 0) {
            menu.getColumnModel().getColumn(0).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 460, 310));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("Menu list");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 170, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 204, 204));
        jLabel7.setText("Menu Details");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 160, 40));

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 0, 780, 660);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed


    }//GEN-LAST:event_addBtnActionPerformed

    private void addBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addBtnMouseClicked
        // TODO add your handling code here:
        if (product_name.getText().trim().isEmpty() && myPrice.getText().trim().isEmpty() && product_category.getText().trim().isEmpty()) {
            msg_menu.setText(" *Menu is Empty");

            msg_price.setText(" *Price is Empty");
            msg_category.setText(" *Category is Empty");
        } else if (product_name.getText().trim().isEmpty()) {
            msg_menu.setText(" *Menu is Empty");
        } else if (myPrice.getText().trim().isEmpty()) {
            msg_price.setText(" *Price is Empty");
        } else if (product_category.getText().trim().isEmpty()) {
            msg_category.setText(" *Category is Empty");
        } else {
            try {

                String product = product_name.getText();
                String price = myPrice.getText();
                String category = product_category.getText();

                Class.forName("com.mysql.jdbc.Driver");
                java.sql.Connection con1 = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");

                PreparedStatement stmt = con1.prepareStatement("Insert into menu_table(product_name,price,category) values(?,?,?)");
                stmt.setString(1, product);
                stmt.setString(2, price);
                stmt.setString(3, category); 
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Menu added successfully!");
                product_name.setText("");
                myPrice.setText("");
                product_category.setText("");
                product_name.requestFocus();
                displayMenu();
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(menu1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_addBtnMouseClicked

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_editBtnActionPerformed

    private void menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuMouseClicked
        // TODO add your handling code here:

        addBtn.setEnabled(false);
        int index = menu.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) menu.getModel();

        ///set data into text fields when row is selected
        String ids = model.getValueAt(menu.getSelectedRow(), 0).toString();
        String menuName = model.getValueAt(menu.getSelectedRow(), 1).toString();
        String price = model.getValueAt(menu.getSelectedRow(), 2).toString();
        String category = model.getValueAt(menu.getSelectedRow(), 3).toString();

        product_id.setText(ids);
        product_name.setText(menuName);
        myPrice.setText(price);
        product_category.setText(category);


    }//GEN-LAST:event_menuMouseClicked

    private void product_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_nameActionPerformed

    private void myPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_myPriceActionPerformed

    private void editBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editBtnMouseClicked
        // TODO add your handling code here:
        if (product_name.getText().trim().isEmpty() && myPrice.getText().trim().isEmpty() && product_category.getText().trim().isEmpty() && product_id.getText().trim().isEmpty()) {
            msg_menu.setText(" *Menu is Empty");
            msg_id.setText(" *id is Empty");
            msg_price.setText(" *Price is Empty");
            msg_category.setText(" *Category is Empty");
        } else if (product_name.getText().trim().isEmpty()) {
            msg_menu.setText(" *Menu is Empty");
        } else if (myPrice.getText().trim().isEmpty()) {
            msg_price.setText(" *Price is Empty");
        } else if (product_category.getText().trim().isEmpty()) {
            msg_category.setText(" *Category is Empty");
        } else if (product_id.getText().trim().isEmpty()) {
            msg_id.setText(" *Id field is Empty");
        } else {
            try {
                String myId = product_id.getText();
                int getid = Integer.valueOf(myId);
                String product = product_name.getText();
                String price = myPrice.getText();
                String category = product_category.getText();
                Class.forName("com.mysql.jdbc.Driver");
                java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");
                PreparedStatement stmt = con.prepareStatement("UPDATE menu_table SET product_name = ? ,price = ?,category = ? WHERE id = ?");
                stmt.setString(1, product);
                stmt.setString(2, price);
                stmt.setString(3, category);
                stmt.setInt(4, getid);
                stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Menu Updated successfully!");
                product_name.setText("");
                myPrice.setText("");
                product_category.setText("");
                product_id.setText("");
                product_name.requestFocus();
                addBtn.setEnabled(true);
                displayMenu();
            } catch (SQLException ex) {
                Logger.getLogger(menu1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(menu1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editBtnMouseClicked

    private void product_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_idActionPerformed

    private void product_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_product_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_product_categoryActionPerformed

    private void deleteBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMouseClicked
        // TODO add your handling code here:
        if (product_name.getText().trim().isEmpty() && myPrice.getText().trim().isEmpty() && product_category.getText().trim().isEmpty() && product_id.getText().trim().isEmpty()) {
            msg_menu.setText(" *Menu is Empty");
            msg_id.setText(" *id is Empty");
            msg_price.setText(" *Price is Empty");
            msg_category.setText(" *Category is Empty");
        } else if (product_name.getText().trim().isEmpty()) {
            msg_menu.setText(" *Menu is Empty");
        } else if (myPrice.getText().trim().isEmpty()) {
            msg_price.setText(" *Price is Empty");
        } else if (product_category.getText().trim().isEmpty()) {
            msg_category.setText(" *Category is Empty");
        } else if (product_id.getText().trim().isEmpty()) {
            msg_id.setText(" *Id field is Empty");
        } else {
            try {
                String prodId = product_id.getText();

                Class.forName("com.mysql.jdbc.Driver");
                java.sql.Connection con = (java.sql.Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/myfirstdb", "root", "");
                PreparedStatement stmt = con.prepareStatement("DELETE FROM menu_table WHERE id = ?");
                stmt.setString(1, prodId);
                int rowCount = stmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Menu Deleted successfully!");
                product_name.setText("");
                myPrice.setText("");
                product_category.setText("");
                product_id.setText("");
                product_name.requestFocus();
                addBtn.setEnabled(true);
                displayMenu();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(menu1.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(menu1.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deleteBtnMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable menu;
    private javax.swing.JLabel msg_category;
    private javax.swing.JLabel msg_id;
    private javax.swing.JLabel msg_menu;
    private javax.swing.JLabel msg_price;
    private javax.swing.JLabel msge_id;
    private javax.swing.JTextField myPrice;
    private javax.swing.JTextField product_category;
    private javax.swing.JTextField product_id;
    private javax.swing.JTextField product_name;
    // End of variables declaration//GEN-END:variables
}
